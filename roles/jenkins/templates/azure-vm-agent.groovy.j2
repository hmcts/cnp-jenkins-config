#!groovy
import com.microsoft.azure.vmagent.builders.*;
import jenkins.model.Jenkins;

def myCloud = new AzureVMCloudBuilder()
.withCloudName("{{ jenkins_agent_cloud_name }}")
.withAzureCredentialsId("{{ jenkins_agent_azure_sp_id }}")
.withExistingResourceGroupName("mgmt-vmimg-store-{{ jenkins_agent_env }}")
.withMaxVirtualMachinesLimit("{{ jenkins_agent_vm_limit }}")
.withDeploymentTimeout("{{ jenkins_agent_deployment_timeout }}")
.addNewTemplate()
    .withName("{{ jenkins_agent_template_name }}")
    .withLabels("{{ jenkins_agent_labels }}")
    .withDescription("Jenkins build agents for MoJ")
    .withWorkspace("{{ jenkins_home }}")
    .withLocation("{{ jenkins_agent_location }}")
    .withVirtualMachineSize("{{ jenkins_agent_machine_size }}")
    .withExistingStorageAccount("mgmtvmimgstore{{ jenkins_agent_env }}")
    .withStorageAccountType("{{jenkins_agent_storage_type}}")
    .addNewAdvancedImage()
        .withCustomImage("{{ jenkins_agent_image_uri }}")
        .withOsType("Linux")
        .withLaunchMethod("SSH")
        .withInitScript("mkdir -pv {{ jenkins_home }}\nchown -R {{ jenkins_agent_user }}:{{ jenkins_agent_user }} {{ jenkins_home }}\ncat >/etc/yum.repos.d/yarn.repo <<EOF\n[yarn]\nname=Yarn Repository\nbaseurl=https://dl.yarnpkg.com/rpm/\nenabled=1\ngpgcheck=1\ngpgkey=https://dl.yarnpkg.com/rpm/pubkey.gpg\nEOF\nyum update -y\nyum install -y java-1.8.0-openjdk-headless java-1.8.0-openjdk docker maven git yarn curl libselinux-python initscripts which nodejs rpmdevtools gettext python-jenkins\ncurl https://releases.hashicorp.com/terraform/0.11.0/terraform_0.11.0_linux_amd64.zip -o /tmp/terraform_0.11.0_linux_amd64.zip && unzip -d /usr/bin /tmp/terraform_0.11.0_linux_amd64.zip && rm -f /tmp/terraform_0.11.0_linux_amd64.zip")
        .withRunScriptAsRoot(true)
        .withDoNotUseMachineIfInitFails(true)
        .withVirtualNetworkName("{{ jenkins_agent_virtual_net }}")
        .withVirtualNetworkResourceGroupName("{{ jenkins_agent_net_rg }}")
        .withSubnetName("{{ jenkins_agent_subnet }}")
        .withUsePrivateIP(true)
        .withNumberOfExecutors("{{ jenkins_agent_executors }}")
    .endAdvancedImage()
    .withAdminCredential("{{ jenkins_agent_vm_creds }}")
.endTemplate()
.build();

Jenkins.getInstance().clouds.add(myCloud);