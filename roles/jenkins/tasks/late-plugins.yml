---
# jenkins_plugin module doesn't support password files.
- name: Get Jenkins admin password from file.
  slurp:
    src: "{{ jenkins_admin_password_file }}"
  register: adminpasswordfile
  no_log: True
  when: jenkins_admin_password_file != ""

- name: Set Jenkins admin password fact.
  set_fact:
    jenkins_admin_password: "{{ adminpasswordfile['stdout'] | default(jenkins_admin_password) }}"
  no_log: True

- name: Get Jenkins admin token from file.
  slurp:
    src: "{{ jenkins_admin_token_file }}"
  register: admintokenfile
  no_log: True
  when: jenkins_admin_token_file != ""

- name: Set Jenkins admin token fact.
  set_fact:
    jenkins_admin_token: "{{ admintokenfile['stdout'] | default(jenkins_admin_token) }}"
  no_log: True

- name: Install Jenkins plugins using password.
  jenkins_plugin:
    name: "{{ item.name }}"
    version: "{{ item.version}}"
    jenkins_home: "{{ jenkins_home }}"
    url_username: "{{ jenkins_admin_username }}"
    url_password: "{{ jenkins_admin_password }}"
    state: "{{ jenkins_plugins_state }}"
    timeout: "{{ jenkins_plugin_timeout }}"
    updates_expiration: "{{ jenkins_plugin_updates_expiration }}"
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}"
  with_items: "{{ late_jenkins_plugins }}"
  when: jenkins_admin_password != ""
  register: result
  until: result|succeeded
  notify:
    - restart jenkins
    - wait for jenkins to start
  ignore_errors: yes

- name: Install Jenkins plugins using token.
  jenkins_plugin:
    name: "{{ item.name }}"
    version: "{{ item.version }}"
    url_token: "{{ jenkins_admin_token }}"
    updates_expiration: "{{ jenkins_plugin_updates_expiration }}"
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}"
    state: "{{ jenkins_plugins_state }}"
  with_items: "{{ late_jenkins_plugins }}"
  when: jenkins_admin_token != ""
  register: result
  until: result|succeeded
  notify:
    - restart jenkins
    - wait for jenkins to start
  ignore_errors: yes
